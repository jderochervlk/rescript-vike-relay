// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import LogoSvg from "./logo.svg";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as Url$MyRescriptViteApp from "./url.mjs";
import * as Link$MyRescriptViteApp from "./Link.mjs";
import * as Character$MyRescriptViteApp from "./Character.mjs";

import './PageShell.css'
;

var logoSvg = LogoSvg;

function PageShell$Sidebar(props) {
  return JsxRuntime.jsx("div", {
              children: props.children,
              style: {
                display: "flex",
                lineHeight: "1.8em",
                padding: "20px",
                alignItems: "center",
                flexDirection: "column",
                flexShrink: "0"
              }
            });
}

var Sidebar = {
  make: PageShell$Sidebar
};

function PageShell$Links(props) {
  var t = Character$MyRescriptViteApp.ListQuery.use(undefined, undefined, undefined, undefined, undefined);
  var results = Core__Option.flatMap(t.characters, (function (t) {
          return t.results;
        }));
  if (results !== undefined) {
    return results.map(function (c) {
                if (c === undefined) {
                  return null;
                }
                var id = Core__Option.getWithDefault(c.id, "-");
                var name = Core__Option.getWithDefault(c.name, "unknown");
                return JsxRuntime.jsx(Link$MyRescriptViteApp.make, {
                            href: "/character/" + id,
                            children: name
                          }, "character-details-" + id);
              });
  } else {
    return [];
  }
}

var Links = {
  make: PageShell$Links
};

function PageShell$Content(props) {
  return JsxRuntime.jsx("div", {
              children: props.children,
              style: {
                borderLeft: "2px solid #eee",
                minHeight: "100vh",
                padding: "20px",
                paddingBottom: "50px"
              }
            });
}

var Content = {
  make: PageShell$Content
};

function PageShell$Logo(props) {
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsx("a", {
                    children: JsxRuntime.jsx("img", {
                          alt: "logo",
                          height: "64px",
                          src: logoSvg,
                          width: "64px"
                        }, "logo-svg"),
                    href: "/"
                  }),
              style: {
                marginTop: "20px",
                marginBottom: "10px"
              }
            }, "site-logo");
}

var Logo = {
  make: PageShell$Logo
};

function PageShell$Layout(props) {
  return JsxRuntime.jsx("div", {
              children: props.children,
              style: {
                display: "flex",
                margin: "auto",
                maxWidth: "900px"
              }
            });
}

var Layout = {
  make: PageShell$Layout
};

function PageShell(props) {
  var url = props.url;
  var match = Url$MyRescriptViteApp.useAtom(undefined);
  var setUrl = match[1];
  React.useEffect((function (param) {
          Curry._1(setUrl, (function (param) {
                  return url;
                }));
        }), []);
  return JsxRuntime.jsx(React.StrictMode, {
              children: JsxRuntime.jsxs(PageShell$Layout, {
                    children: [
                      JsxRuntime.jsxs(PageShell$Sidebar, {
                            children: [
                              JsxRuntime.jsx(PageShell$Logo, {}),
                              JsxRuntime.jsx(React.Suspense, {
                                    children: Caml_option.some(JsxRuntime.jsx(PageShell$Links, {}))
                                  })
                            ]
                          }, "site-sidebar"),
                      JsxRuntime.jsx(PageShell$Content, {
                            children: props.children
                          })
                    ]
                  }, "site-layout")
            });
}

var make = PageShell;

export {
  logoSvg ,
  Sidebar ,
  Links ,
  Content ,
  Logo ,
  Layout ,
  make ,
}
/*  Not a pure module */
